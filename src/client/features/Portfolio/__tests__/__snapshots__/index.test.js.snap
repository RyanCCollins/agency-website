// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Portfolio /> when shallow rendered should create a snapshot 1`] = `
<ApolloProvider
  client={
    ApolloClient {
      "addTypename": true,
      "dataId": undefined,
      "fieldWithArgs": [Function],
      "initialState": Object {},
      "middleware": [Function],
      "mutate": [Function],
      "networkInterface": HTTPFetchNetworkInterface {
        "_afterwares": Array [],
        "_middlewares": Array [],
        "_opts": Object {},
        "_uri": "http://0.0.0.0:1338/api",
      },
      "query": [Function],
      "queryDeduplication": false,
      "queryManager": QueryManager {
        "addTypename": true,
        "deduplicator": Deduplicator {
          "inFlightRequestPromises": Object {},
          "networkInterface": HTTPFetchNetworkInterface {
            "_afterwares": Array [],
            "_middlewares": Array [],
            "_opts": Object {},
            "_uri": "http://0.0.0.0:1338/api",
          },
        },
        "fetchQueryPromises": Object {
          "2": Object {
            "promise": undefined,
            "reject": [Function],
            "resolve": [Function],
          },
        },
        "idCounter": 3,
        "networkInterface": HTTPFetchNetworkInterface {
          "_afterwares": Array [],
          "_middlewares": Array [],
          "_opts": Object {},
          "_uri": "http://0.0.0.0:1338/api",
        },
        "observableQueries": Object {
          "1": Object {
            "observableQuery": ObservableQuery {
              "isCurrentlyPolling": false,
              "observers": Array [
                Object {
                  "error": [Function],
                  "next": [Function],
                },
              ],
              "options": Object {
                "metadata": Object {
                  "reactComponent": Object {
                    "displayName": "Apollo(Portfolio)",
                  },
                },
                "query": Object {
                  "definitions": Array [
                    Object {
                      "directives": Array [],
                      "kind": "OperationDefinition",
                      "name": Object {
                        "kind": "Name",
                        "value": "Projects",
                      },
                      "operation": "query",
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": null,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "projects",
                            },
                            "selectionSet": Object {
                              "kind": "SelectionSet",
                              "selections": Array [
                                Object {
                                  "alias": Object {
                                    "kind": "Name",
                                    "value": "id",
                                  },
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "_id",
                                  },
                                  "selectionSet": null,
                                },
                                Object {
                                  "alias": null,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "title",
                                  },
                                  "selectionSet": null,
                                },
                                Object {
                                  "alias": null,
                                  "arguments": Array [],
                                  "directives": Array [],
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "image",
                                  },
                                  "selectionSet": null,
                                },
                                Object {
                                  "kind": "Field",
                                  "name": Object {
                                    "kind": "Name",
                                    "value": "__typename",
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                      "variableDefinitions": Array [],
                    },
                  ],
                  "kind": "Document",
                  "loc": Object {
                    "end": 83,
                    "source": Object {
                      "body": "
      query Projects {
        projects {
          id: _id
          title
          image
        }
      }
    ",
                      "name": "GraphQL",
                    },
                    "start": 0,
                  },
                },
              },
              "queryId": "1",
              "queryManager": [Circular],
              "scheduler": QueryScheduler {
                "inFlightQueries": Object {},
                "intervalQueries": Object {},
                "pollingTimers": Object {},
                "queryManager": [Circular],
                "registeredQueries": Object {},
              },
              "shouldSubscribe": true,
              "subscriberFunction": [Function],
              "subscriptionHandles": Array [],
              "variables": Object {},
            },
          },
        },
        "pollingTimers": Object {},
        "queryDeduplication": false,
        "queryDocuments": Object {
          "1": Object {
            "definitions": Array [
              Object {
                "directives": Array [],
                "kind": "OperationDefinition",
                "name": Object {
                  "kind": "Name",
                  "value": "Projects",
                },
                "operation": "query",
                "selectionSet": Object {
                  "kind": "SelectionSet",
                  "selections": Array [
                    Object {
                      "alias": null,
                      "arguments": Array [],
                      "directives": Array [],
                      "kind": "Field",
                      "name": Object {
                        "kind": "Name",
                        "value": "projects",
                      },
                      "selectionSet": Object {
                        "kind": "SelectionSet",
                        "selections": Array [
                          Object {
                            "alias": Object {
                              "kind": "Name",
                              "value": "id",
                            },
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "_id",
                            },
                            "selectionSet": null,
                          },
                          Object {
                            "alias": null,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "title",
                            },
                            "selectionSet": null,
                          },
                          Object {
                            "alias": null,
                            "arguments": Array [],
                            "directives": Array [],
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "image",
                            },
                            "selectionSet": null,
                          },
                          Object {
                            "kind": "Field",
                            "name": Object {
                              "kind": "Name",
                              "value": "__typename",
                            },
                          },
                        ],
                      },
                    },
                  ],
                },
                "variableDefinitions": Array [],
              },
            ],
            "kind": "Document",
            "loc": Object {
              "end": 83,
              "source": Object {
                "body": "
      query Projects {
        projects {
          id: _id
          title
          image
        }
      }
    ",
                "name": "GraphQL",
              },
              "start": 0,
            },
          },
        },
        "queryIdsByName": Object {
          "Projects": Array [
            "1",
          ],
        },
        "queryListeners": Object {
          "1": Array [
            [Function],
          ],
        },
        "reducerConfig": Object {
          "customResolvers": undefined,
          "dataIdFromObject": undefined,
        },
        "reduxRootSelector": [Function],
        "resultComparator": undefined,
        "resultTransformer": undefined,
        "scheduler": QueryScheduler {
          "inFlightQueries": Object {},
          "intervalQueries": Object {},
          "pollingTimers": Object {},
          "queryManager": [Circular],
          "registeredQueries": Object {},
        },
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
        },
      },
      "reducerConfig": Object {
        "customResolvers": undefined,
        "dataIdFromObject": undefined,
      },
      "reduxRootKey": "apollo",
      "reduxRootSelector": null,
      "resetStore": [Function],
      "resultComparator": undefined,
      "resultTransformer": undefined,
      "setStore": [Function],
      "shouldForceFetch": false,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
      },
      "version": "local",
      "watchQuery": [Function],
    }
  }
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "black1": "#0a0a0a",
        "black2": "#2d2d2d",
        "black3": "#555555",
        "dark1": "#13293D",
        "dark2": "#006494",
        "dark3": "#92374D",
        "error": "#ff324d",
        "gray1": "#696969",
        "gray2": "#7c7c7c",
        "gray3": "#828282",
        "light1": "#0072BB",
        "light2": "#ff9800",
        "light3": "#0C7489",
        "offwhite": "#f5f5f5",
        "ok": "#8cc800",
        "primary": "#03A9F4",
        "secondary": "#9c27b0",
        "warning": "#ffd602",
        "white1": "#fff",
        "white2": "#f3f3f3",
        "white3": "#e6e8ec",
      }
    }
  >
    <_class>
      <Apollo(Portfolio)
        theme={
          Object {
            "black1": "#0a0a0a",
            "black2": "#2d2d2d",
            "black3": "#555555",
            "dark1": "#13293D",
            "dark2": "#006494",
            "dark3": "#92374D",
            "error": "#ff324d",
            "gray1": "#696969",
            "gray2": "#7c7c7c",
            "gray3": "#828282",
            "light1": "#0072BB",
            "light2": "#ff9800",
            "light3": "#0C7489",
            "offwhite": "#f5f5f5",
            "ok": "#8cc800",
            "primary": "#03A9F4",
            "secondary": "#9c27b0",
            "warning": "#ffd602",
            "white1": "#fff",
            "white2": "#f3f3f3",
            "white3": "#e6e8ec",
          }
        }
      >
        <Portfolio
          loading={true}
          theme={
            Object {
              "black1": "#0a0a0a",
              "black2": "#2d2d2d",
              "black3": "#555555",
              "dark1": "#13293D",
              "dark2": "#006494",
              "dark3": "#92374D",
              "error": "#ff324d",
              "gray1": "#696969",
              "gray2": "#7c7c7c",
              "gray3": "#828282",
              "light1": "#0072BB",
              "light2": "#ff9800",
              "light3": "#0C7489",
              "offwhite": "#f5f5f5",
              "ok": "#8cc800",
              "primary": "#03A9F4",
              "secondary": "#9c27b0",
              "warning": "#ffd602",
              "white1": "#fff",
              "white2": "#f3f3f3",
              "white3": "#e6e8ec",
            }
          }
        >
          <Presentation
            isMounted={false}
            loading={true}
            theme={
              Object {
                "black1": "#0a0a0a",
                "black2": "#2d2d2d",
                "black3": "#555555",
                "dark1": "#13293D",
                "dark2": "#006494",
                "dark3": "#92374D",
                "error": "#ff324d",
                "gray1": "#696969",
                "gray2": "#7c7c7c",
                "gray3": "#828282",
                "light1": "#0072BB",
                "light2": "#ff9800",
                "light3": "#0C7489",
                "offwhite": "#f5f5f5",
                "ok": "#8cc800",
                "primary": "#03A9F4",
                "secondary": "#9c27b0",
                "warning": "#ffd602",
                "white1": "#fff",
                "white2": "#f3f3f3",
                "white3": "#e6e8ec",
              }
            }
          >
            <Box
              alignItems="center"
              backgroundColor="#f5f5f5"
            >
              <styled.div
                alignItems="center"
                backgroundColor="#f5f5f5"
              >
                <div
                  className="fCdVIs"
                >
                  <Box
                    alignItems="center"
                    pad="large"
                  >
                    <styled.div
                      alignItems="center"
                      pad="large"
                    >
                      <div
                        className="fDxjjW"
                      >
                        <Headline
                          color="#666"
                          fontSize="medium"
                          fontWeight={700}
                          margin="medium"
                          textAlign="center"
                        >
                          <styled.h1
                            color="#666"
                            fontSize="medium"
                            fontWeight={700}
                            margin="medium"
                            textAlign="center"
                          >
                            <h1
                              className="hLOqrJ"
                              color="#666"
                              fontSize="medium"
                              fontWeight={700}
                            >
                              Case Studies
                            </h1>
                          </styled.h1>
                        </Headline>
                        <styled.div
                          color="#666"
                        >
                          <div
                            className="gJIgCc"
                            color="#666"
                          />
                        </styled.div>
                      </div>
                    </styled.div>
                  </Box>
                </div>
              </styled.div>
            </Box>
          </Presentation>
        </Portfolio>
      </Apollo(Portfolio)>
    </_class>
  </ThemeProvider>
</ApolloProvider>
`;
